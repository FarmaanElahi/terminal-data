name: CI

on:
  push:
    branches:
      - main

jobs:
  build-arm64:
    runs-on: ubuntu-24.04-arm

    steps:
      - uses: actions/checkout@v4

      - name: Set outputs
        id: vars
        run: echo "::set-output name=short_commit_id::$(git rev-parse --short HEAD)"

      - name: Print Short Commit ID
        run: echo "${{ steps.vars.outputs.short_commit_id }}"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            devfarmaan/terminal:latest-arm64
            devfarmaan/terminal:${{ steps.vars.outputs.short_commit_id }}-arm64

  build-amd64:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set outputs
        id: vars
        run: echo "::set-output name=short_commit_id::$(git rev-parse --short HEAD)"

      - name: Print Short Commit ID
        run: echo "${{ steps.vars.outputs.short_commit_id }}"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            devfarmaan/terminal:latest-amd64
            devfarmaan/terminal:${{ steps.vars.outputs.short_commit_id }}-amd64


  create-manifests:
    runs-on: ubuntu-latest
    needs: [ build-amd64,build-arm64 ]

    steps:
      - uses: actions/checkout@v3

      - name: Set outputs
        id: vars
        run: echo "::set-output name=short_commit_id::$(git rev-parse --short HEAD)"

      - name: Print Short Commit ID
        run: echo "${{ steps.vars.outputs.short_commit_id }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create SHA manifest and push
        run: |
          docker manifest create \
            devfarmaan/terminal:${{ github.sha }} \
            --amend devfarmaan/terminal:${{ steps.vars.outputs.short_commit_id }}-amd64 \
            --amend devfarmaan/terminal:${{ steps.vars.outputs.short_commit_id }}-arm64
          docker manifest push devfarmaan/terminal:${{ steps.vars.outputs.short_commit_id }}

      - name: Create latest manifest and push
        run: |
          docker manifest create \
            devfarmaan/terminal:latest \
            --amend devfarmaan/terminal:latest-amd64 \
            --amend devfarmaan/terminal:latest-arm64
          docker manifest push devfarmaan/terminal:latest